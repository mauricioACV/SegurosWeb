@model Seguros.Web.FrontEnd.Models.Cliente

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal container">
    <h4>Cliente</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="container col-md-4">
    <div class="form-group">
        @Html.LabelFor(model => model.Rut_cliente, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rut_cliente, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rut_cliente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApellidoPat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApellidoPat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ApellidoPat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApellidoMat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApellidoMat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ApellidoMat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fecha_nacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fecha_nacimiento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fecha_nacimiento, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
   
<div class="container col-md-4">
    <div class="form-group">
        @Html.LabelFor(model => model.Calle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Calle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Calle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NumCalle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumCalle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumCalle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (ViewBag.RegionList != null)
            {
                @Html.DisplayNameFor(model => model.Region)
                @Html.DropDownListFor(model => model.Region, ViewBag.RegionList as SelectList, "---Seleccione Una region----", new { @class = "form-control" })
            }

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <label>Ciudad</label>
            <select id="ciudades" class="form-control">
                <option>Selecione Ciudad</option>
            </select>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <label>Comuna</label>
            <select id="comuna" class="form-control">
                <option>Selecione Comuna</option>
            </select>
        </div>
    </div>
</div>
    
<div class="container col-md-4">
    <div class="form-group">
        @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Operacion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Operacion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Operacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
   

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
        $(function () {

            $("#Region").change(function () {
                var ciudad = this.value;
                $.get("@Url.Action("GetCiudadByRegion", "Cliente")", { id: ciudad }, function (data) {

                    if (data.CiudadList) {
                        fillCiudades(data.CiudadList);
                    }
                });

            });
            function fillCiudades(data) {
                $("#ciudades").empty();
                var options = '<option>Selecione Ciudad</option>';
                for (var i = 0; i < data.length; i++) {
                    options += '<option value="' + data[i].Nombre_ciudad + '">' + data[i].Nombre_ciudad + '</option>';
                }
                $("#ciudades").append(options);
                $("#comuna").empty();
                var options = '<option>Selecione Comuna</option>';
                $("#comuna").append(options);
            };
            $("#ciudades").change(function () {
                var e = document.getElementById("ciudades");
                var strUser = e.options[e.selectedIndex].value;
                $.get("@Url.Action("GetComunaByCiudad", "Cliente")", { name: strUser }, function (data) {

                    if (data.ComunaList && data.ComunaList.length > 0) {
                        fillComuna(data.ComunaList);
                    } else {
                        $("#comuna").empty();
                        options = '<option value="' + strUser + '">' + strUser + '</option>';
                        $("#comuna").append(options);
                    }
                });

            });
            function fillComuna(data) {
                $("#comuna").empty();
                var options = '<option>Selecione Comuna</option>';
                for (var i = 0; i < data.length; i++) {
                    options += '<option value="' + data[i].Id + '">' + data[i].Nombre_comuna + '</option>';
                }
                $("#comuna").append(options);
            };
        });
</script>
}
